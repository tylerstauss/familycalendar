rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isFamilyMember(familyId) {
      let family = get(/databases/$(database)/documents/families/$(familyId));
      return isSignedIn() && family != null && 
        (family.data.members.hasAny([{'userId': request.auth.uid}]) || 
         family.data.creatorId == request.auth.uid);
    }
    
    function isFamilyOwner(familyId) {
      let family = get(/databases/$(database)/documents/families/$(familyId));
      return isSignedIn() && family != null && family.data.creatorId == request.auth.uid;
    }
    
    // Families collection
    match /families/{familyId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if isFamilyOwner(familyId);
      
      // Nested collections within families
      match /mealTemplates/{templateId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isFamilyMember(familyId);
      }
      
      match /mealAssignments/{assignmentId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isFamilyMember(familyId);
      }
      
      match /ingredients/{ingredientId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isFamilyMember(familyId);
      }
      
      match /events/{eventId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isFamilyMember(familyId);
      }
      
      match /members/{memberId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isFamilyOwner(familyId);
      }
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      match /familyMembers/{memberId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
      
      match /meals/{mealId} {
        allow read: if isSignedIn() && isOwner(userId);
        allow write: if isSignedIn() && isOwner(userId);
      }
      
      match /mealPlans/{planId} {
        allow read: if isSignedIn() && isOwner(userId);
        allow write: if isSignedIn() && isOwner(userId);
      }
    }
  }
} 